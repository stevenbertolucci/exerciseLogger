{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven Bertolucci\\\\Downloads\\\\exercise-MERN\\\\exercise-ui\\\\src\\\\pages\\\\EditExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditExercisePage = _ref => {\n  _s();\n  let {\n    exerciseToEdit\n  } = _ref;\n  const navigate = useNavigate();\n  const [name, setName] = useState(exerciseToEdit.name);\n  const [reps, setReps] = useState(exerciseToEdit.reps);\n  const [weight, setWeight] = useState(exerciseToEdit.weight);\n  const [unit, setUnit] = useState(exerciseToEdit.unit);\n  const [date, setDate] = useState(exerciseToEdit.date);\n  const editExercise = async () => {\n    const editedExercise = {\n      name,\n      reps,\n      weight,\n      unit,\n      date\n    };\n    const response = await fetch(`/exercises/${exerciseToEdit._id}`, {\n      method: 'PUT',\n      body: JSON.stringify(editedExercise),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert(\"Successfully edited the exercise!\");\n    } else {\n      alert(`Failed to edit movie, status code = ${response.status}`);\n    }\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: reps,\n      onChange: e => setReps(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: weight,\n      onChange: e => setWeight(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: unit,\n      onChange: e => setUnit(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editExercise,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(EditExercisePage, \"SLlA7YcRt3llpd1SL9iIA/qZNdU=\", false, function () {\n  return [useNavigate];\n});\n_c = EditExercisePage;\nexport default EditExercisePage;\nvar _c;\n$RefreshReg$(_c, \"EditExercisePage\");","map":{"version":3,"names":["React","useState","useNavigate","EditExercisePage","exerciseToEdit","navigate","name","setName","reps","setReps","weight","setWeight","unit","setUnit","date","setDate","editExercise","editedExercise","response","fetch","_id","method","body","JSON","stringify","headers","status","alert","e","target","value"],"sources":["C:/Users/Steven Bertolucci/Downloads/exercise-MERN/exercise-ui/src/pages/EditExercisePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const EditExercisePage = ({exerciseToEdit}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName] = useState(exerciseToEdit.name);\r\n    const [reps, setReps] = useState(exerciseToEdit.reps);\r\n    const [weight, setWeight] = useState(exerciseToEdit.weight);\r\n    const [unit, setUnit] = useState(exerciseToEdit.unit);\r\n    const [date, setDate] = useState(exerciseToEdit.date);\r\n\r\n\r\n    const editExercise = async () => {\r\n        const editedExercise = {name, reps, weight, unit, date};\r\n        const response = await fetch(`/exercises/${exerciseToEdit._id}`, {\r\n            method: 'PUT', \r\n            body: JSON.stringify(editedExercise),\r\n            headers: {'Content-Type': 'application/json',\r\n            },\r\n        });\r\n    if(response.status === 200) {\r\n        alert(\"Successfully edited the exercise!\");\r\n    } else {\r\n        alert(`Failed to edit movie, status code = ${response.status}`);\r\n    }\r\n    navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Edit Exercise</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                value={reps}\r\n                onChange={e => setReps(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                value={weight}\r\n                onChange={e => setWeight(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                value={unit}\r\n                onChange={e => setUnit(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                value={date}\r\n                onChange={e => setDate(e.target.value)} />\r\n            <button\r\n                onClick={editExercise}\r\n            >Save</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditExercisePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}